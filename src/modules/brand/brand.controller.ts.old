import { Request, Response } from "express";
import BrandService from "./brand.service";

export default class BrandController {
  private brandService: BrandService;

  constructor({ brandService }) {
    this.brandService = brandService;
  }

  async createBrand(req: Request, res: Response) {
    try {
      const brand = await this.brandService.create(req.body);
      res.status(201).json(brand);
      return brand;
    } catch (error) {
      res.status(400).json({ error: error.message });
    }
  }

  async getBrands(req: Request, res: Response) {
    try {
      const brands = await this.brandService.list();
      res.json(brands);
      return brands;
    } catch (error) {
      res.status(500).json({ error: error.message });
    }
  }

  async getBrandById(req: Request, res: Response) {
    try {
      const brand = await this.brandService.retrieve(req.params.id);
      if (!brand) {
        return res.status(404).json({ message: "Brand not found" });
      }
      res.json(brand);
      return brand;
    } catch (error) {
      res.status(500).json({ error: error.message });
    }
  }

  async updateBrand(req: Request, res: Response) {
    try {
      const updatedBrand = await this.brandService.update(req.params.id, req.body);
      res.json(updatedBrand);
      return updatedBrand;
    } catch (error) {
      res.status(400).json({ error: error.message });
    }
  }

  async deleteBrand(req: Request, res: Response) {
    try {
      await this.brandService.delete(req.params.id);
      res.status(204).send();
      return;
    } catch (error) {
      res.status(500).json({ error: error.message });
    }
  }
}